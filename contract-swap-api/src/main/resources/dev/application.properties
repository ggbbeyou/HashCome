server.port=6012
spring.application.name=swap-api
server.context-path=/swap
#================================start====================================================================
#redis
## Redis集群配置方式
#spring.redis.cluster.nodes=39.104.119.155:6380
#spring.redis.host:172.17.0.5
spring.redis.port:6379
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=300
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=60000
## 连接池中的最大空闲连接
spring.redis.pool.max-idle=100
## 连接池中的最小空闲连接
spring.redis.pool.min-idle=20
## 连接超时时间（毫秒）
spring.redis.timeout=30000
## 连接密码
spring.redis.password=redis123456

#mongodb
spring.data.mongodb.uri=mongodb://bizzan:shaoxianjun95@172.17.0.4:27017/contract
#jpa
#spring.jpa.hibernate.ddl-auto=update

#===================================end===================================================================
#kafka
#spring.kafka.bootstrap-servers=172.17.0.4:9092
# 消息重传次数
spring.kafka.producer.retries=0
# 每次批处理的大小
spring.kafka.producer.batch.size=256
#linger指定的时间等待更多的records出现
spring.kafka.producer.linger=1
# 缓存数据的内存大小
spring.kafka.producer.buffer.memory=1048576
spring.kafka.consumer.enable.auto.commit=false
spring.kafka.consumer.session.timeout=15000
spring.kafka.consumer.auto.commit.interval=100
spring.kafka.consumer.auto.offset.reset=earliest
spring.kafka.consumer.group.id=default-group
spring.kafka.consumer.concurrency=9
spring.kafka.consumer.maxPollRecordsConfig=50
spring.devtools.restart.enabled=true

#datasource
# spring.datasource.urljdbc:mysql://172.16.194.74:3306/bizzan?characterEncoding=utf-8&serverTimezone=GMT%2B8&useSSL=false
# spring.datasource.username=root
# spring.datasource.password=shaoxianjun@95
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=200
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,log4j

#jpa
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.data.jpa.repositories.enabled=true

#ES 配置项
es.username=
es.password=
es.mine.index=
es.mine.type=
es.public.ip=
es.private.ip=#
es.port=9200

#eureka
eureka.client.serviceUrl.defaultZone=http://172.17.0.15:7000/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${spring.application.name}:${server.port}

######################################## hawk netty ########################################
aqmd.netty.port=38901
## 负责处理客户端的TCP连接请求，建议1
aqmd.netty.bossThreadSize=1
## IO读写线程，建议1<N<CPU核心数*2
aqmd.netty.worker-thread-size=3
## 包头表示包长度占的长度
aqmd.netty.packetHeaderLength=4
## 数据包最大值，超过抛TooLongFrameException
aqmd.netty.max-frame-length=2147483647

## 写空闲时间，单位：秒
aqmd.netty.writer-idle=200


## 业务最大超时时间，单位：秒
aqmd.netty.max-timeout=60
## 业务缺省超时时间，单位：秒
aqmd.netty.defaultTimeout=30
##具体业务处理的handler线程数
aqmd.netty.deal-handler-thread-size=10
##netty日志级别设置
aqmd.netty.serviceLoggerLevel=debug
##开启不登陆访问
aqmd.netty.direct-access-flag=1
##允许访问的指令
aqmd.netty.direct-access-command=30000,30001,30002,30003,30021,30022,30023,30024,30025,30026,30027,30028,30029
aqmd.netty.websocket-flag=1
aqmd.netty.websocket-port=38985